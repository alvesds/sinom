{"version":3,"file":"static/js/main.f8710df7.js","mappings":"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","sources":["src/screens/Home/Home.styles.ts","src/components/Navbar/Navbar.styles.tsx","src/components/LanguagePopup/LanguagePopup.styles.ts","src/components/LanguagePopup/index.tsx","src/contexts/search.tsx","src/components/Navbar/index.tsx","src/popups/Loading/Loading.styles.ts","src/popups/Loading/index.tsx","src/components/Ad/Ad.styles.tsx","src/resources/lang/en.locale.ts","src/resources/lang/pt.locale.ts","src/configs/locale.ts","src/components/Ad/index.tsx","src/components/Space/index.tsx","src/screens/Home/index.tsx","src/screens/Search/Search.styles.ts","src/screens/Search/index.tsx","src/screens/Word/Word.styles.ts","src/configs/axios.ts","src/screens/Word/index.tsx","src/screens/Advertise/Advertise.styles.ts","src/screens/Advertise/index.tsx","src/screens/Routes.tsx","src/configs/font.ts","src/configs/theme.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Platform, StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    container: {\n        backgroundColor: theme.colors.background,\n        width: \"100%\",\n        height: \"100%\"\n    },\n    content: {\n        width: \"85%\",\n        maxWidth: \"85%\",\n        alignSelf: \"center\"\n    },\n    spaceSmall: {\n        margin: 5\n    },\n    spaceMedium: {\n        margin: 15\n    },\n    spaceBig: {\n        margin: 25\n    },\n    cardsContainer: {\n        flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\",\n        width: \"100%\",\n        gap: 6\n    },\n    touchableCard: {\n        ...(Platform.OS === \"web\" ? { flex: 1 } : {})\n    },\n    card: {\n        backgroundColor: theme.colors.outlineVariant,\n        borderRadius: 5,\n        padding: 20,\n        flex: Platform.OS === \"web\" ? 1 : undefined,\n    },\n    wordCardTitle: {\n        flexDirection: \"row\"\n    },\n    wordCardButton: {\n        color: theme.colors.primary,\n        marginLeft: \"auto\",\n        fontWeight: \"700\"\n    },\n    wordCardContent: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        gap: 15\n    },\n    divider: {\n        backgroundColor: theme.colors.outline\n    }\n})\n\nexport default styles;","import { StyleSheet, StatusBar } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    safeArea: {\n        // SAFE STATUSBAR\n        borderTopWidth: StatusBar.currentHeight,\n        borderTopColor: theme.colors.primary,\n        // SAFE STATUSBAR\n        backgroundColor: theme.colors.background,\n        borderBottomWidth: 1,\n        borderBottomColor: theme.colors.outline,\n        elevation: 3\n    },\n    alignContainer: {\n        width: \"85%\",\n        alignSelf: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n    },\n    input: {\n        maxWidth: \"50%\",\n        width: 250,\n        fontSize: 12,\n        marginLeft: 10,\n        marginBottom: 10\n    },\n    inputContent: {\n        paddingRight: 5\n    },\n    icon: {\n        backgroundColor: theme.colors.background,\n        width: 32,\n        height: 32\n    },\n    menu: {\n        position: \"absolute\",\n        right: 0\n    },\n    divider: {\n        width: 1,\n        height: \"50%\",\n        alignSelf: \"center\",\n        backgroundColor: theme.colors.outline\n    }\n})\n\nexport default styles;","import { StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    modal: {\n        backgroundColor: theme.colors.background,\n        alignSelf: \"center\",\n        borderRadius: 20,\n        maxWidth: \"70%\",\n        width: 250,\n        padding: 20\n    },\n    buttonContent: {\n        borderColor: theme.colors.outline,\n        alignSelf: \"center\",\n        borderWidth: 1,\n        width: \"90%\",\n        margin: 5\n    },\n    buttonLabel: {\n        fontWeight: \"700\",\n    },\n    buttonSelected: {\n\n    },\n    buttonIcon: {\n\n    }\n});\n\nexport default styles;","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Modal, Portal, useTheme } from \"react-native-paper\";\nimport { Image } from \"react-native\";\nimport styles from \"./LanguagePopup.styles\";\n\ninterface LanguageProps {\n    icon: any;\n    label: string;\n    value: string;\n};\n\nconst languages: LanguageProps[] = [\n    {\n        icon: require(\"../../../assets/media/icons/brazil.png\"),\n        label: \"Português\",\n        value: \"pt\"\n    },\n    {\n        icon: require(\"../../../assets/media/icons/usa.png\"),\n        label: \"English\",\n        value: \"en\"\n    }\n]\n\nconst LanguagePopup = ({ dismiss, visible }: { dismiss: () => void, visible: boolean }) => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    const { i18n } = useTranslation();\n\n    const set = (lang: string) => {\n        i18n.changeLanguage(lang);\n    };\n\n    return (\n        <Portal>\n            <Modal contentContainerStyle={themedStyles.modal} dismissable={true} onDismiss={dismiss} visible={visible}>\n                {\n                    languages.map((language, index) => (\n                        <Button\n                            buttonColor={i18n.language === language.value ? theme.colors.primary : \"transparent\"}\n                            textColor={i18n.language === language.value ? theme.colors.background : theme.colors.primary}\n                            style={themedStyles.buttonContent}\n                            labelStyle={themedStyles.buttonLabel}\n                            icon={({ size }) => <Image source={language.icon} style={{ width: size, height: size, borderRadius: 5 }} />}\n                            onPress={() => set(language.value)}\n                            key={index}\n                        >\n                            {language.label}\n                        </Button>\n                    ))\n                }\n            </Modal>\n        </Portal>\n    );\n};\n\nexport default LanguagePopup;","import React, { useContext } from \"react\";\nimport { createContext, useState } from \"react\";\n\nconst SearchContext = createContext({ search: \"\", setSearch: (str: string) => { } });\n\nexport const SearchStore = ({ children }: { children: React.ReactNode }) => {\n    const [search, setSearch] = useState(\"\");\n\n    return (\n        <SearchContext.Provider value={{ search, setSearch }}>\n            {children}\n        </SearchContext.Provider>\n    )\n};\n\nconst useSearch = () => {\n    const { ...props } = useContext(SearchContext);\n    return props;\n};\n\nexport default useSearch;","import React, { useState } from \"react\";\nimport { Divider, IconButton, TextInput, useTheme } from \"react-native-paper\";\nimport { View, Image } from \"react-native\";\nimport styles from \"./Navbar.styles\";\nimport LanguagePopup from \"../LanguagePopup\";\nimport { useTranslation } from \"react-i18next\";\nimport useSearch from \"../../contexts/search\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../../screens/Routes\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst logo = require(\"../../../assets/icon.png\")\n\ntype NavigationProps = NativeStackNavigationProp<RootStackParamList>\n\nconst Navbar = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    const { navigate } = useNavigation<NavigationProps>();\n\n    const { search, setSearch } = useSearch();\n    const { t } = useTranslation();\n\n    const [langSettings, setLangSettings] = useState(false);\n\n    const toggleLangSettings = () => {\n        setLangSettings(!langSettings);\n    };\n\n    const triggerSearch = () => {\n        if (!search) {\n            return\n        };\n        navigate(\"Search\", { word: search })\n    };\n\n    return (\n        <>\n            <LanguagePopup visible={langSettings} dismiss={toggleLangSettings} />\n\n            <View style={themedStyles.safeArea}>\n                <View style={themedStyles.alignContainer}>\n                    <IconButton\n                        icon={({ size }) => <Image source={logo} style={{ width: size, height: size, borderRadius: 5 }} />}\n                        iconColor={theme.colors.primary}\n                        onPress={() => navigate(\"Home\")}\n                    />\n                    <Divider style={themedStyles.divider} />\n\n                    <TextInput\n                        mode=\"outlined\"\n                        theme={{ roundness: 50 }}\n                        style={themedStyles.input}\n                        contentStyle={themedStyles.inputContent}\n                        placeholder={t(\"Search\") || \"\"}\n                        textColor={theme.colors.primary}\n                        placeholderTextColor={theme.colors.outline}\n                        onKeyPress={(e) => e.nativeEvent.key === \"Enter\" && triggerSearch()}\n                        numberOfLines={1}\n                        onChangeText={setSearch}\n                        value={search}\n                        right={\n                            <TextInput.Icon\n                                icon=\"magnify\"\n                                containerColor={theme.colors.primary}\n                                iconColor={theme.colors.background}\n                                size={12}\n                                onPress={triggerSearch}\n                            />\n                        }\n                    />\n\n                    <IconButton\n                        icon=\"web\"\n                        style={themedStyles.menu}\n                        iconColor={theme.colors.primary}\n                        onPress={toggleLangSettings}\n                    />\n                </View>\n            </View>\n        </>\n    )\n};\n\nexport default Navbar;","import { StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nclass LoadingProgress {\n    readonly num: number;\n\n    constructor(num: number){\n        if(num < 0 || num > 1){\n            throw new Error(\"The loading progress number is out of range\");\n        };\n        this.num = num;\n    };\n\n    result(max: number){\n        return this.num * max;\n    };\n};\n\nconst styles = ({ theme, progress }: { theme: ThemeType, progress?: number }) => StyleSheet.create({\n    container: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: theme.colors.primary,\n        width: \"100%\",\n        height: \"100%\"\n    },\n    logoUnderlay: {\n        width: 111,\n        height: 111,\n    },\n    logoOverlay: {\n        width: 111,\n        height: progress && new LoadingProgress(progress).result(111),\n        zIndex: 1,\n        position: \"absolute\",\n    }\n})\n\nexport default styles;","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport { useTheme } from \"react-native-paper\";\nimport styles from \"./Loading.styles\";\n\nconst LoadingIndicator = ({ children, progress, isLoading }: { children?: React.ReactNode, progress?: number, isLoading: boolean }) => {\n    const theme = useTheme();\n    const themedStyles = styles({ theme, progress });\n\n    return (\n        isLoading ?\n            <View style={themedStyles.container}>\n                <Image\n                    source={require(\"../../../assets/splash/overlay.png\")}\n                    style={themedStyles.logoOverlay}\n                />\n                <Image\n                    source={require(\"../../../assets/splash/underlay.png\")}\n                    style={themedStyles.logoUnderlay}\n                />\n            </View>\n            :\n            <>\n                {children}\n            </>\n    );\n};\n\nexport default LoadingIndicator;","import { StyleSheet } from \"react-native\";\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    row: {\n        borderRadius: 5,\n        overflow: \"hidden\",\n        flexDirection: \"row\",\n    },\n    button: {\n        borderRightWidth: 1,\n        borderRightColor: theme.colors.background,\n        borderStyle: \"dashed\",\n        backgroundColor: theme.colors.primary,\n        borderRadius: 0,\n        alignItems: \"flex-start\",\n        justifyContent: \"center\"\n    },\n    image: {\n        flex: 19,\n        backgroundColor: theme.colors.primary,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingStart: 20,\n        padding: 10,\n    },\n    label: {\n        flex: 1,\n        color: theme.colors.background,\n        fontSize: 13,\n        lineHeight: 20,\n        fontWeight: \"700\"\n    },\n});\n\nexport default styles;","\nconst en = {\n    \"Search\": \"Search a word\",\n    \"Advertise\": \"Advertise your product on Synonyms\",\n    \"Most Seen Words\": \"Most Seen Words\",\n    \"See More\": \"See More\",\n    \"Most Recent Words\": \"Most Recent Words\",\n    \"Donate URL\": \"https://buymeacoffee.com/freelascode\",\n    \"Source URL\": \"https://github.com/freelascode\",\n    \"Donate\": \"Donate\",\n    \"Report\": \"Report\",\n    \"Source\": \"Source\",\n    \"Search Results\": \"Showing /quantity/ results for '/word/'\",\n    \"Filter\": {\n        \"Button\": \"Filter\",\n        \"Words That Start With\": \"Words that start with\"\n    },\n    \"Advertise Screen\": {\n        \"Head\": \"Your brand is important\",\n        \"Body\": \"And for just $3.01 per month you can place your advertisement on our website and application.\",\n        \"Footer\": \"Subject to restrictions and adjustments\",\n        \"Primary Button\": \"Hire\",\n        \"Secondary Button\": \"Contact Us\"\n    },\n    \"Word Viewer\": {\n        \"Empty Word Class\": \"Word\",\n        \"Empty Information\": \"No additional information was found for this word\",\n        \"Empty Quote\": \"No sample quote was found for this word\",\n        \"Empty Synonyms\": \"No synonyms were found for this word\",\n        \"Synonyms Label\": \"Synonyms for /word/\",\n        \"Synonyms Button\": \"Share\",\n        \"Empty Rhymes\": \"No rhymes were found for this word\",\n        \"Rhymes Label\": \"Rhymes for /word/\",\n        \"Rhymes Button\": \"Share\"\n    }\n};\n\nexport default en;","\nconst pt = {\n    \"Search\": \"Buscar uma palavra\",\n    \"Advertise\": \"Anuncie o seu produto em Synonyms\",\n    \"Most Seen Words\": \"Palavras mais Vistas\",\n    \"See More\": \"Ver Mais\",\n    \"Most Recent Words\": \"Palavras mais Recentes\",\n    \"Donate URL\": \"https://apoia.se/freelascode\",\n    \"Source URL\": \"https://github.com/freelascode\",\n    \"Donate\": \"Doar\",\n    \"Report\": \"Reportar\",\n    \"Source\": \"Source\",\n    \"Search Results\": \"Exibindo /quantity/ resultados para '/word/'\",\n    \"Filter\": {\n        \"Button\": \"Filtrar\",\n        \"Words That Start With\": \"Palavras que começam com\"\n    },\n    \"Advertise Screen\": {\n        \"Head\": \"A sua marca é importante\",\n        \"Body\": \"E por apenas R$ 15.00 por mês você pode veicular a sua propaganda em nosso website e aplicação.\",\n        \"Footer\": \"Sujeito a restrições ou reajustes\",\n        \"Primary Button\": \"Contratar\",\n        \"Secondary Button\": \"Entrar em Contato\"\n    },\n    \"Word Viewer\": {\n        \"Empty Word Class\": \"Palavra\",\n        \"Empty Information\": \"Nenhuma informação adicional foi encontrada para esta palavra\",\n        \"Empty Quote\": \"Nenhuma frase de exemplo foi inserida no momento\",\n        \"Empty Synonyms\": \"Nenhum sinônimo foi encontrado para esta palavra\",\n        \"Synonyms Label\": \"Sinônimos de /word/\",\n        \"Synonyms Button\": \"Compartilhar\",\n        \"Empty Rhymes\": \"Nenhuma rima foi encontrada para esta palavra\",\n        \"Rhymes Label\": \"Rimas de /word/\",\n        \"Rhymes Button\": \"Compartilhar\"\n    }\n};\n\nexport default pt","//LANG IMPORTS\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { locale } from 'expo-localization';\nimport en from '../resources/lang/en.locale';\nimport pt from '../resources/lang/pt.locale';\n\ni18n\n    .use(initReactI18next)\n    .init({\n        compatibilityJSON: 'v3',\n        resources: {\n            en: {\n                translation: en\n            },\n            pt: {\n                translation: pt\n            }\n        },\n        lng: locale.slice(0, 2),\n        fallbackLng: \"en\",\n        interpolation: {\n            escapeValue: false\n        }\n    });\n\nexport default i18n;","import React from \"react\";\nimport { View } from \"react-native\";\nimport { IconButton, Text, useTheme } from \"react-native-paper\";\nimport styles from \"./Ad.styles\";\nimport locale from \"../../configs/locale\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../../screens/Routes\";\n\ntype NavigationProps = NativeStackNavigationProp<RootStackParamList>\n\nconst AdBox = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n    const { navigate } = useNavigation<NavigationProps>();\n\n    const onPress = () => {\n        navigate(\"Advertise\");\n    };\n\n    return (\n        <View style={themedStyles.row}>\n            <View style={themedStyles.button}>\n                <IconButton icon={\"bullhorn\"} iconColor={theme.colors.background} />\n            </View>\n            <View style={themedStyles.image}>\n                <Text style={themedStyles.label}>\n                    {locale.t(\"Advertise\")}\n                </Text>\n                <IconButton\n                    icon={\"arrow-right-thin-circle-outline\"}\n                    iconColor={theme.colors.background}\n                    onPress={onPress}\n                />\n            </View>\n        </View>\n    );\n};\n\nexport default AdBox;","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport default {\n    Small: ({ theme }: { theme: any }) => <View style={theme.spaceSmall} />,\n    Medium: ({ theme }: { theme: any }) => <View style={theme.spaceMedium} />,\n    Big: ({ theme }: { theme: any }) => <View style={theme.spaceBig} />\n};","import React from \"react\";\nimport { Button, Divider, Text, useTheme, TouchableRipple } from \"react-native-paper\";\nimport styles from \"./Home.styles\";\nimport Navbar from \"../../components/Navbar\";\nimport LoadingIndicator from \"../../popups/Loading\";\nimport AdBox from \"../../components/Ad\";\nimport { Linking, Platform, ScrollView, View } from \"react-native\";\nimport Space from \"../../components/Space\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../Routes\";\n\ninterface ItemsProps {\n    icon?: string;\n    label: string;\n    navigate?: {\n        external: boolean,\n        to: string\n    }\n};\n\ntype NavigationProps = NativeStackNavigationProp<RootStackParamList, 'Home'>\n\nconst MenuTabs = ({ items }: { items: ItemsProps[] }) => {\n    const { navigate } = useNavigation<NavigationProps>();\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    return (\n        <View style={themedStyles.cardsContainer}>\n            {\n                items.map((item, index) => {\n                    const onPress = () => {\n                        if (!item.navigate) return;\n\n                        if (item.navigate.external) {\n                            Platform.OS === \"web\" ?\n                                window.open(item.navigate?.to, \"_blank\")\n                                :\n                                Linking.openURL(item.navigate?.to);\n                        } else {\n                            navigate(\"Home\");\n                        };\n                    };\n\n                    return (\n                        <TouchableRipple\n                            key={index}\n                            onPress={onPress}\n                            rippleColor={theme.colors.primary + \"80\"}\n                            style={themedStyles.touchableCard}\n                        >\n                            <Button\n                                textColor={theme.colors.shadow}\n                                style={themedStyles.card}\n                                {...{ icon: item.icon }}\n                            >\n                                {item.label}\n                            </Button>\n                        </TouchableRipple>\n                    )\n                })\n            }\n        </View>\n    );\n};\n\nconst WordCard = ({ label, right, words }: { label: string, right: string, words: string[] }) => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    return (\n        <View>\n            <View style={themedStyles.wordCardTitle}>\n                <Text>{label}</Text>\n                <Text\n                    style={themedStyles.wordCardButton}\n                    onPress={() => { }}\n                >\n                    {right}\n                </Text>\n            </View>\n\n            <Space.Small theme={themedStyles} />\n\n            <ScrollView contentContainerStyle={themedStyles.wordCardContent}>\n                {words.map((word, index) => <Text key={index}>{word}</Text>)}\n            </ScrollView>\n        </View>\n    );\n};\n\nconst Home = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n    const { t } = useTranslation();\n\n    return (\n        <LoadingIndicator isLoading={false} progress={0}>\n            <View style={themedStyles.container}>\n                <Navbar />\n\n                <View style={themedStyles.content}>\n                    <Space.Medium theme={themedStyles} />\n\n                    <AdBox />\n\n                    <Space.Small theme={themedStyles} />\n\n                    <MenuTabs items={[\n                        { label: t(\"Donate\"), icon: \"hand-heart\", navigate: { external: true, to: t(\"Donate URL\") } },\n                        { label: t(\"Report\"), icon: \"police-badge\", navigate: { external: false, to: \"Home\" } },\n                        { label: t(\"Source\"), icon: \"github\", navigate: { external: true, to: t(\"Source URL\") } },\n                    ]} />\n                    <Space.Medium theme={themedStyles} />\n\n                    <WordCard label={t(\"Most Seen Words\")} right={t(\"See More\")} words={[\"teste\", \"testando\"]} />\n\n                    <Space.Medium theme={themedStyles} />\n                    <Divider style={themedStyles.divider} />\n                    <Space.Medium theme={themedStyles} />\n\n                    <WordCard label={t(\"Most Recent Words\")} right={t(\"See More\")} words={[\"comprar\", \"vender\"]} />\n                </View>\n            </View>\n        </LoadingIndicator>\n    );\n};\n\nexport default Home;","import { StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    container: {\n        backgroundColor: theme.colors.background,\n        width: \"100%\",\n        height: \"100%\"\n    },\n    content: {\n        width: \"85%\",\n        maxWidth: \"85%\",\n        alignSelf: \"center\"\n    },\n    spaceSmall: {\n        margin: 5\n    },\n    spaceMedium: {\n        margin: 15\n    },\n    spaceBig: {\n        margin: 25\n    },\n    divider: {\n        backgroundColor: theme.colors.outline\n    },\n    resultContainer: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        gap: 15\n    },\n    resultText: {\n        textDecorationLine: \"underline\",\n        textDecorationStyle: \"dotted\"\n    },\n    filterLabel: {\n        fontWeight: \"600\"\n    },\n    filterButton: {\n        width: 100,\n        borderColor: theme.colors.outline,\n        borderWidth: 2\n    },\n    addedFilterButton: {\n        borderColor: theme.colors.outline,\n        borderWidth: 2\n    },\n    addedFilterContent: {\n        flexDirection: \"row-reverse\",\n    },\n    filterContainer: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        gap: 6\n    }\n})\n\nexport default styles;","import React from \"react\";\nimport { Button, Divider, Text, useTheme } from \"react-native-paper\";\nimport styles from \"./Search.styles\";\nimport Navbar from \"../../components/Navbar\";\nimport LoadingIndicator from \"../../popups/Loading\";\nimport AdBox from \"../../components/Ad\";\nimport { ScrollView, View } from \"react-native\";\nimport Space from \"../../components/Space\";\nimport { useTranslation } from \"react-i18next\";\nimport { RouteProp, useNavigation, useRoute } from \"@react-navigation/native\";\nimport { RootStackParamList } from \"../Routes\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n\ntype NavigationProps = NativeStackNavigationProp<RootStackParamList, 'Home'>\n\nconst Search = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n    const { t } = useTranslation();\n    const { params } = useRoute<RouteProp<RootStackParamList>>();\n    const { navigate } = useNavigation<NavigationProps>();\n\n    return (\n        <LoadingIndicator isLoading={false} progress={0}>\n            <View style={themedStyles.container}>\n                <Navbar />\n\n                <View style={themedStyles.content}>\n                    <Space.Medium theme={themedStyles} />\n\n                    <AdBox />\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Text>\n                        {t(\"Search Results\")\n                            .replace(\"/quantity/\", \"1\")\n                            .replace(\"/word/\", params?.word ?? \"\")\n                        }\n                    </Text>\n\n                    <Space.Small theme={themedStyles} />\n\n                    <ScrollView contentContainerStyle={themedStyles.resultContainer}>\n                        {[params?.word].map((word, index) => word && (\n                            <Text\n                                onPress={() => navigate(\"Word\", { word })}\n                                style={themedStyles.resultText}\n                                key={index}\n                            >\n                                {word}\n                            </Text>\n                        ))}\n                    </ScrollView>\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Divider style={themedStyles.divider} />\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <ScrollView contentContainerStyle={themedStyles.filterContainer}>\n                        <Button\n                            theme={{ roundness: 1 }}\n                            icon={\"filter\"}\n                            buttonColor={theme.colors.primary}\n                            textColor={theme.colors.background}\n                            labelStyle={themedStyles.filterLabel}\n                            style={themedStyles.filterButton}\n                            onPress={() => { }}\n                        >\n                            {t(\"Filter.Button\")}\n                        </Button>\n\n                        <Button\n                            theme={{ roundness: 1 }}\n                            icon={\"delete\"}\n                            textColor={theme.colors.primary}\n                            labelStyle={themedStyles.filterLabel}\n                            contentStyle={themedStyles.addedFilterContent}\n                            style={themedStyles.addedFilterButton}\n                            onPress={() => { }}\n                        >\n                            {t(\"Filter.Words That Start With\")} \"{params?.word}\"\n                        </Button>\n                    </ScrollView>\n                </View>\n            </View>\n        </LoadingIndicator>\n    );\n};\n\nexport default Search;","import { StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    container: {\n        backgroundColor: theme.colors.background,\n        width: \"100%\",\n        height: \"100%\"\n    },\n    content: {\n        width: \"85%\",\n        maxWidth: \"85%\",\n        alignSelf: \"center\"\n    },\n    spaceSmall: {\n        margin: 5\n    },\n    spaceMedium: {\n        margin: 15\n    },\n    spaceBig: {\n        margin: 25\n    },\n    divider: {\n        backgroundColor: theme.colors.outline\n    },\n    rowText: {\n        flexDirection: \"row\"\n    },\n    rowTextButton: {\n        color: theme.colors.primary,\n        marginLeft: \"auto\",\n        fontWeight: \"700\"\n    },\n    quoteContainer: {\n        backgroundColor: theme.colors.primary,\n        alignItems: \"center\",\n        borderRadius: 5,\n        padding: 20,\n    },\n    quoteText: {\n        color: theme.colors.background,\n        textAlign: \"center\",\n        fontWeight: \"800\",\n    },\n    rowContentContainer: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        gap: 15,\n    },\n    rowContentText: {\n        textDecorationLine: \"underline\",\n        textDecorationStyle: \"dotted\"\n    },\n    loading: {\n        shadowOffset: {\n            width: 0,\n            height: 0\n        },\n        shadowOpacity: 0,\n    }\n})\n\nexport default styles;","import axios from \"axios\";\n\nconst Axios = axios.create({\n    baseURL: \"https://sinouns-1-x6008571.deta.app\",\n    timeout: 8000\n});\n\nexport default Axios;","import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, Button, Divider, Modal, Portal, Text, useTheme } from \"react-native-paper\";\nimport styles from \"./Word.styles\";\nimport Navbar from \"../../components/Navbar\";\nimport LoadingIndicator from \"../../popups/Loading\";\nimport { ScrollView, View } from \"react-native\";\nimport Space from \"../../components/Space\";\nimport { useTranslation } from \"react-i18next\";\nimport { RouteProp, useNavigation, useRoute } from \"@react-navigation/native\";\nimport { RootStackParamList } from \"../Routes\";\nimport Axios from \"../../configs/axios\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n\ntype NavigationProps = NativeStackNavigationProp<RootStackParamList, 'Word'>\n\nconst Section = ({ title, button, children }: { title: string, button: string, children: React.ReactNode }) => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    return (\n        <>\n            <View style={themedStyles.rowText}>\n                <Text>{title}</Text>\n                <Text style={themedStyles.rowTextButton}>\n                    {button}\n                </Text>\n            </View>\n            <Space.Small theme={themedStyles} />\n            <ScrollView contentContainerStyle={themedStyles.rowContentContainer}>\n                {children}\n            </ScrollView>\n        </>\n    )\n};\n\nconst Word = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n    const { t } = useTranslation();\n    const { params } = useRoute<RouteProp<RootStackParamList>>();\n\n    const { navigate, goBack, canGoBack, isFocused } = useNavigation<NavigationProps>();\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [synonyms, setSynonyms] = useState<string[]>([]);\n    const [rhymes, setRhymes] = useState<string[]>([]);\n\n    useEffect(() => {\n        const fetchWord = async () => {\n            setIsLoading(true);\n            try {\n                const { data } = await Axios.post(\"/word\", { word: params?.word }, { params: { country: \"br\" } });\n                setSynonyms(data.message);\n\n                setTimeout(() => {\n                    setIsLoading(false);\n                }, 150);\n            } catch (err) {\n                setIsLoading(false);\n\n                console.log(err);\n\n                if (canGoBack()) {\n                    goBack();\n                } else {\n                    navigate(\"Home\");\n                }\n            };\n        };\n\n        fetchWord();\n    }, [params?.word, isFocused]);\n\n    return (\n        <>\n            <Portal>\n                <Modal\n                    dismissable={false}\n                    visible={isLoading}\n                    contentContainerStyle={themedStyles.loading}\n                >\n                    <ActivityIndicator size={32} color={theme.colors.primary} />\n                </Modal>\n            </Portal>\n\n            <ScrollView\n                style={themedStyles.container}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n            >\n                <Navbar />\n\n                <View style={themedStyles.content}>\n                    <Space.Medium theme={themedStyles} />\n\n                    <Section\n                        title={params?.word ?? \"\"}\n                        button={t(\"Word Viewer.Empty Word Class\")}\n                    >\n                        <Text>\n                            {t(\"Word Viewer.Empty Information\")}\n                        </Text>\n                    </Section>\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <View style={themedStyles.quoteContainer}>\n                        <Text style={themedStyles.quoteText}>\n                            {t(\"Word Viewer.Empty Quote\")}\n                        </Text>\n                    </View>\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Section\n                        title={t(\"Word Viewer.Synonyms Label\").replace(\"/word/\", params?.word ?? \"\")}\n                        button={t(\"Word Viewer.Synonyms Button\")}\n                    >\n                        {synonyms.map((word, index) => word && (\n                            <Text\n                                onPress={() => navigate(\"Word\", { word })}\n                                style={themedStyles.rowContentText}\n                                key={index}\n                            >\n                                {word}\n                            </Text>\n                        ))}\n                        {!synonyms.length && <Text>{t(\"Word Viewer.Empty Synonyms\")}</Text>}\n                    </Section>\n\n                    <Space.Medium theme={themedStyles} />\n                    <Divider style={themedStyles.divider} />\n                    <Space.Medium theme={themedStyles} />\n\n                    <Section\n                        title={t(\"Word Viewer.Rhymes Label\").replace(\"/word/\", params?.word ?? \"\")}\n                        button={t(\"Word Viewer.Rhymes Button\")}\n                    >\n                        {!rhymes.length && <Text>{t(\"Word Viewer.Empty Rhymes\")}</Text>}\n                    </Section>\n                </View>\n            </ScrollView>\n        </>\n    );\n};\n\nexport default Word;","import { StyleSheet } from \"react-native\"\nimport { ThemeType } from \"../../configs/theme\";\n\nconst styles = (theme: ThemeType) => StyleSheet.create({\n    container: {\n        backgroundColor: theme.colors.background,\n        width: \"100%\",\n        height: \"100%\"\n    },\n    content: {\n        width: 300,\n        maxWidth: \"85%\",\n        alignSelf: \"center\",\n    },\n    spaceSmall: {\n        margin: 5\n    },\n    spaceMedium: {\n        margin: 15\n    },\n    spaceBig: {\n        margin: 25\n    },\n    buttonContact: {\n        borderColor: theme.colors.outline,\n        borderWidth: 2,\n        width: \"100%\"\n    },\n    labelContact: {\n        fontWeight: \"700\"\n    },\n    image: {\n        borderRadius: 0,\n        width: \"100%\",\n        height: 100\n    },\n    title: {\n        color: theme.colors.primary,\n        fontWeight: \"800\",\n        fontSize: 26\n    },\n    label: {\n        color: theme.colors.shadow,\n        textAlign: \"center\",\n        fontWeight: \"700\",\n        fontSize: 14\n    },\n    labelSmall: {\n        color: theme.colors.primary,\n        textAlign: \"center\",\n        fontWeight: \"400\",\n        fontSize: 10\n    }\n})\n\nexport default styles;","import React from \"react\";\nimport { Button, Text, useTheme } from \"react-native-paper\";\nimport styles from \"./Advertise.styles\";\nimport Navbar from \"../../components/Navbar\";\nimport LoadingIndicator from \"../../popups/Loading\";\nimport { Image, View } from \"react-native\";\nimport Space from \"../../components/Space\";\nimport { useTranslation } from \"react-i18next\";\n\nconst placeholder = require(\"../../../assets/other/placeholder.png\");\n\nconst Advertise = () => {\n    const theme = useTheme();\n    const themedStyles = styles(theme);\n\n    const { t } = useTranslation();\n\n    return (\n        <LoadingIndicator isLoading={false} progress={0}>\n            <View style={themedStyles.container}>\n                <Navbar />\n\n                <View style={themedStyles.content}>\n\n                    <Space.Big theme={themedStyles} />\n\n                    <Text style={themedStyles.title} adjustsFontSizeToFit numberOfLines={1}>\n                        {t(\"Advertise Screen.Head\")}\n                    </Text>\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Image\n                        source={placeholder}\n                        style={themedStyles.image}\n                    />\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Text style={themedStyles.label}>\n                        {t(\"Advertise Screen.Body\")}\n                    </Text>\n\n                    <Space.Small theme={themedStyles} />\n\n                    <Text style={themedStyles.labelSmall}>\n                        {t(\"Advertise Screen.Footer\")}\n                    </Text>\n\n                    <Space.Medium theme={themedStyles} />\n\n                    <Button\n                        onPress={() => { }}\n                        buttonColor={theme.colors.primary}\n                        labelStyle={themedStyles.labelContact}\n                        textColor={theme.colors.background}\n                        style={themedStyles.buttonContact}\n                        icon=\"handshake-outline\"\n                    >\n                        {t(\"Advertise Screen.Primary Button\")}\n                    </Button>\n\n                    <Space.Small theme={themedStyles} />\n\n                    <Button\n                        onPress={() => { }}\n                        labelStyle={themedStyles.labelContact}\n                        textColor={theme.colors.primary}\n                        style={themedStyles.buttonContact}\n                        icon=\"phone-dial\"\n                    >\n                        {t(\"Advertise Screen.Secondary Button\")}\n                    </Button>\n                </View>\n            </View>\n        </LoadingIndicator>\n    );\n};\n\nexport default Advertise;","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Home from \"./Home\";\nimport Search from \"./Search\";\nimport Word from \"./Word\";\nimport Advertise from \"./Advertise\";\n\nconst linking = {\n    prefixes: [\"/\"],\n    config: {\n        screens: {\n            Home: \"\",\n            Search: \"search/:word\",\n            Word: \":word\",\n            Advertise: \"advertise\"\n        }\n    }\n};\n\nexport type RootStackParamList = {\n    Home: undefined;\n    Search: { word: string };\n    Word: { word: string };\n    Advertise: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst Routes = () => {\n    return (\n        <NavigationContainer linking={linking}>\n            <Stack.Navigator screenOptions={{ headerShown: false, title: \"Synonyms\", }}>\n                <Stack.Screen name=\"Home\" component={Home} />\n                <Stack.Screen name=\"Search\" component={Search} />\n                <Stack.Screen name=\"Advertise\" component={Advertise} />\n                <Stack.Screen name=\"Word\" component={Word} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\n\nexport default Routes;","const font = {\n    default: {\n        fontFamily: 'Nunito-Regular',\n        fontWeight: '500',\n        letterSpacing: 0,\n        lineHeight: 28,\n        fontSize: 16\n    },\n    regular: {\n        fontFamily: 'Nunito-Regular',\n        fontWeight: '500',\n        letterSpacing: 0,\n        lineHeight: 28,\n        fontSize: 16\n    },\n    medium: {\n        fontFamily: 'Nunito-Bold',\n        fontWeight: '500',\n        letterSpacing: 0,\n        lineHeight: 28,\n        fontSize: 16\n    },\n    light: {\n        fontFamily: 'Nunito-Light',\n        fontWeight: '500',\n        letterSpacing: 0,\n        lineHeight: 28,\n        fontSize: 16\n    },\n    thin: {\n        fontFamily: 'Nunito-LightItalic',\n        fontWeight: '500',\n        letterSpacing: 0,\n        lineHeight: 28,\n        fontSize: 16\n    }\n} as const;\n\nexport default class Font {\n    public static config = font;\n\n    public static imports = {\n        'Nunito-Regular': require('../../assets/fonts/Nunito-Regular.ttf'),\n        'Nunito-Bold': require('../../assets/fonts/Nunito-Bold.ttf'),\n        'Nunito-Light': require('../../assets/fonts/Nunito-Light.ttf'),\n        'Nunito-LightItalic': require('../../assets/fonts/Nunito-LightItalic.ttf'),\n    } as const;\n};","import { MD3LightTheme as DefaultTheme, MD3Theme, configureFonts } from \"react-native-paper\";\nimport Font from \"./font\";\n\nexport type ThemeType = MD3Theme;\n\nconst theme: ThemeType = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        primary: \"#FF70A6\",\n        outline: \"#FFD0E1\",\n        outlineVariant: \"#FFECF7\",\n        surface: \"#201A23\",\n        background: \"#FFFFFF\",\n        tertiary: \"#222034\"\n    },\n    fonts: configureFonts({ config: Font.config, isV3: true }),\n};\n\nexport default theme;","import React, { useEffect, useState } from \"react\"\nimport Routes from \"./src/screens/Routes\";\nimport LoadingIndicator from \"./src/popups/Loading\";\nimport { useFonts } from \"expo-font\";\nimport Font from \"./src/configs/font\";\nimport theme from \"./src/configs/theme\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport \"./src/configs/locale\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./src/configs/locale\";\nimport { SearchStore } from \"./src/contexts/search\";\n\nexport default function App() {\n  // Dependencies\n  const [fontsLoaded] = useFonts(Font.imports);\n  // Dependencies\n\n  const [progress, setProgress] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const dependencies = [fontsLoaded];\n    const loaded = dependencies.filter(dependency => !!dependency);\n\n    if ((loaded.length / dependencies.length) === 1) {\n      setIsLoading(false);\n      return;\n    };\n\n    setProgress(loaded.length / dependencies.length);\n  }, [fontsLoaded]);\n\n  return (\n    <SearchStore>\n      <I18nextProvider i18n={i18n}>\n        <PaperProvider theme={theme}>\n          <LoadingIndicator isLoading={isLoading} progress={progress}>\n            <Routes />\n          </LoadingIndicator>\n        </PaperProvider>\n      </I18nextProvider>\n    </SearchStore>\n  );\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [773], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["theme","StyleSheet","container","backgroundColor","colors","background","width","height","content","maxWidth","alignSelf","spaceSmall","margin","spaceMedium","spaceBig","cardsContainer","flexDirection","Platform","gap","touchableCard","_objectSpread","flex","card","outlineVariant","borderRadius","padding","undefined","wordCardTitle","wordCardButton","color","primary","marginLeft","fontWeight","wordCardContent","flexWrap","divider","outline","safeArea","borderTopWidth","StatusBar","borderTopColor","borderBottomWidth","borderBottomColor","elevation","alignContainer","alignItems","input","fontSize","marginBottom","inputContent","paddingRight","icon","menu","position","right","modal","buttonContent","borderColor","borderWidth","buttonLabel","buttonSelected","buttonIcon","languages","require","label","value","_ref","dismiss","visible","useTheme","themedStyles","styles","i18n","useTranslation","_jsx","Portal","children","Modal","contentContainerStyle","dismissable","onDismiss","map","language","index","Button","buttonColor","textColor","style","labelStyle","_ref2","size","Image","source","onPress","lang","changeLanguage","SearchContext","createContext","search","setSearch","str","SearchStore","_useState","useState","_useState2","_slicedToArray","Provider","_useContext","useContext","Object","assign","_objectDestructuringEmpty","logo","navigate","useNavigation","_useSearch","useSearch","t","langSettings","setLangSettings","toggleLangSettings","triggerSearch","word","_jsxs","_Fragment","LanguagePopup","View","IconButton","iconColor","Divider","TextInput","mode","roundness","contentStyle","placeholder","placeholderTextColor","onKeyPress","e","nativeEvent","key","numberOfLines","onChangeText","containerColor","LoadingProgress","num","_classCallCheck","Error","this","_createClass","max","progress","justifyContent","logoUnderlay","logoOverlay","result","zIndex","isLoading","row","overflow","button","borderRightWidth","borderRightColor","borderStyle","image","paddingStart","lineHeight","initReactI18next","init","compatibilityJSON","resources","en","translation","pt","lng","locale","fallbackLng","interpolation","escapeValue","Text","_ref3","MenuTabs","items","item","TouchableRipple","_item$navigate","_item$navigate2","external","window","open","to","Linking","rippleColor","shadow","WordCard","words","Space","ScrollView","LoadingIndicator","Navbar","AdBox","resultContainer","resultText","textDecorationLine","textDecorationStyle","filterLabel","filterButton","addedFilterButton","addedFilterContent","filterContainer","_params$word","params","useRoute","replace","rowText","rowTextButton","quoteContainer","quoteText","textAlign","rowContentContainer","rowContentText","loading","shadowOffset","shadowOpacity","axios","baseURL","timeout","Section","title","_params$word2","_params$word3","_useNavigation","goBack","canGoBack","isFocused","setIsLoading","_useState3","_useState4","synonyms","setSynonyms","_useState5","_useState6","rhymes","useEffect","fetchWord","_asyncToGenerator","data","Axios","country","message","setTimeout","err","console","log","apply","arguments","ActivityIndicator","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","length","buttonContact","labelContact","labelSmall","adjustsFontSizeToFit","linking","prefixes","config","screens","Home","Search","Word","Advertise","Stack","createNativeStackNavigator","NavigationContainer","Navigator","screenOptions","headerShown","Screen","name","component","Font","default","fontFamily","letterSpacing","regular","medium","light","thin","imports","DefaultTheme","surface","tertiary","fonts","configureFonts","isV3","App","_useFonts","useFonts","fontsLoaded","setProgress","dependencies","loaded","filter","dependency","I18nextProvider","PaperProvider","Routes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}